{"version":3,"sources":["Clickable.js","constants.js","index.js"],"names":["Clickable","_ref","onClick","children","props","Object","objectWithoutProperties","react_default","a","createElement","assign","role","tabIndex","onKeyDown","event","key","LIGHT_STYLE","concat","MINSK","BELARUS_BOUNDS","Map","ReactMapboxGl","accessToken","App","state","activeLegendId","legendsById","keyBy","_this","legends","_this2","this","_this$state","activeLegend","Fragment","style","containerStyle","position","top","bottom","width","fitBounds","fitBoundsOptions","padding","center","filter","emoji","map","_ref2","id","coordinates","emojiCode","emojiShort","lib_esm","src_Clickable","className","setState","alt","src","offset","title","text","Component","rootElement","document","getElementById","ReactDOM","render","src_App","require"],"mappings":"wv+IAwBeA,EArBG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,SAAaC,EAAzBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,+BAChBM,EAAAC,EAAAC,cAAA,MAAAJ,OAAAK,OAAA,CACEC,KAAK,SACLC,SAAU,EACVV,QAASA,EACTW,UAAW,SAAAC,GACS,UAAdA,EAAMC,KACRb,EAAQY,KAGRV,GAEHD,ICVQa,EAAW,GAAAC,OAFH,6BAEG,8BAEXC,EAAQ,CAAC,QAAS,SAElBC,EAAiB,CAC5B,UACA,UACA,UACA,WCFIC,UAAMC,YAAc,CACxBC,YDXA,mGCmBIC,6MAaJC,MAAQ,CACNC,eAAgB,KAChBC,YAAaC,IAAMC,EAAKxB,MAAMyB,QAAS,+EAGhC,IAAAC,EAAAC,KACCF,EAAYE,KAAK3B,MAAjByB,QADDG,EAEiCD,KAAKP,MAArCC,EAFDO,EAECP,eACFQ,EAHCD,EAEiBN,YACSD,GACjC,OACElB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0B,SAAA,KACE3B,EAAAC,EAAAC,cAACW,EAAD,CACEe,MAAOnB,EACPoB,eAAgB,CACdC,SAAU,WACVC,IAAK,EACLC,OAAQ,EACRC,MAAO,QAGTC,UAAWtB,EACXuB,iBAAkB,CAChBC,QAAS,IAEXC,OAAQ1B,GAEPW,EACEgB,OAAO,SAAA5C,GAAA,OAAAA,EAAG6C,QACVC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAIC,EAAPF,EAAOE,YAAaJ,EAApBE,EAAoBF,MAAmBK,GAAvCH,EAA2BI,WAA3BJ,EAAuCG,WAAvC,OACH5C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAQtC,IAAKkC,EAAIC,YAAaA,GAC5B3C,EAAAC,EAAAC,cAAC6C,EAAD,CAAWC,UAAU,SAASrD,QAAS,kBAAM4B,EAAK0B,SAAS,CAAE/B,eAAgBwB,MAC3E1C,EAAAC,EAAAC,cAAA,OAAKgD,IAAKX,EAAOY,IAAG,YAAAzC,OAAckC,EAAd,cAI3BlB,GACC1B,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAOtC,IAAKkB,EAAagB,GAAIC,YAAajB,EAAaiB,YAAaS,OAAQ,IAC1EpD,EAAAC,EAAAC,cAAA,OAAK8C,UAAU,SACbhD,EAAAC,EAAAC,cAAA,WAAMwB,EAAa2B,UAK3BrD,EAAAC,EAAAC,cAAA,OAAK8C,UAAU,eAAetB,GAAgBA,EAAa4B,cAxDjDC,aA8DZC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,CAAKvC,QAASwC,EAAQ,OAAkBN","file":"static/js/main.967a54f5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Clickable = ({ onClick, children, ...props }) => (\n  <div\n    role=\"button\"\n    tabIndex={0}\n    onClick={onClick}\n    onKeyDown={event => {\n      if (event.key === 'Enter') {\n        onClick(event);\n      }\n    }}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nClickable.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Clickable;\n","export const ACCESS_TOKEN =\n  'pk.eyJ1IjoidWxhZGJvaGRhbiIsImEiOiJjam9kMDQ1NzYxOTYyM3FvanhpOXE1cDIzIn0.JiXb8lR9e53GqZz51PZdaQ';\n\nconst STYLE_PREFIX = 'mapbox://styles/uladbohdan';\n\nexport const LIGHT_STYLE = `${STYLE_PREFIX}/cjpjxmip00js22snnkwi85d4i`;\n\nexport const MINSK = [27.5615, 53.9045];\n\nexport const BELARUS_BOUNDS = [\n  23.178357, // west\n  51.261881, // south\n  32.776784, // east\n  56.139922, // north\n];\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ReactMapboxGl, { Marker, Popup } from 'react-mapbox-gl';\nimport keyBy from 'lodash/keyBy';\n\nimport Clickable from './Clickable';\n\nimport { ACCESS_TOKEN, LIGHT_STYLE, MINSK, BELARUS_BOUNDS } from './constants';\nimport './styles.css';\n\nconst Map = ReactMapboxGl({\n  accessToken: ACCESS_TOKEN,\n});\n\n// NOTE: When rendering many objects,\n// avoid using `Markers` as it will negatively affect performance.\n// Use `Layers` and `Features` instead.\n// https://github.com/alex3165/react-mapbox-gl/blob/master/docs/API.md#marker\n\nclass App extends Component {\n  static propTypes = {\n    legends: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        coordinates: PropTypes.arrayOf(PropTypes.number).isRequired,\n        text: PropTypes.string.isRequired,\n        emoji: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  };\n\n  state = {\n    activeLegendId: null,\n    legendsById: keyBy(this.props.legends, 'id'),\n  };\n\n  render() {\n    const { legends } = this.props;\n    const { activeLegendId, legendsById } = this.state;\n    const activeLegend = legendsById[activeLegendId];\n    return (\n      <>\n        <Map\n          style={LIGHT_STYLE}\n          containerStyle={{\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            width: '100%',\n          }}\n          // TODO: fix calling `fitBounds` on window resizing\n          fitBounds={BELARUS_BOUNDS}\n          fitBoundsOptions={{\n            padding: 25,\n          }}\n          center={MINSK}\n        >\n          {legends\n            .filter(({ emoji }) => emoji)\n            .map(({ id, coordinates, emoji, emojiShort, emojiCode }) => (\n              <Marker key={id} coordinates={coordinates}>\n                <Clickable className=\"marker\" onClick={() => this.setState({ activeLegendId: id })}>\n                  <img alt={emoji} src={`./images/${emojiCode}.png`} />\n                </Clickable>\n              </Marker>\n            ))}\n          {activeLegend && (\n            <Popup key={activeLegend.id} coordinates={activeLegend.coordinates} offset={50}>\n              <div className=\"popup\">\n                <div>{activeLegend.title}</div>\n              </div>\n            </Popup>\n          )}\n        </Map>\n        <div className=\"legend-text\">{activeLegend && activeLegend.text}</div>\n      </>\n    );\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App legends={require('./legends')} />, rootElement);\n"],"sourceRoot":""}