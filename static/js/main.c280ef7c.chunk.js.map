{"version":3,"sources":["Clickable.js","constants.js","index.js"],"names":["Clickable","_ref","onClick","children","props","Object","objectWithoutProperties","react_default","a","createElement","assign","role","tabIndex","onKeyDown","event","key","LIGHT_STYLE","concat","MINSK","Map","ReactMapboxGl","accessToken","minZoom","maxZoom","App","state","activeLegendId","legendsById","keyBy","_this","legends","_this2","this","_this$state","activeLegend","center","Fragment","style","containerStyle","position","top","bottom","width","zoom","map","id","coordinates","emoji","lib_esm","src_Clickable","className","setState","offset","title","text","Component","rootElement","document","getElementById","ReactDOM","render","src_App","require"],"mappings":"6wnHAwBeA,EArBG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,SAAaC,EAAzBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,+BAChBM,EAAAC,EAAAC,cAAA,OAAAJ,OAAAK,OAAA,CACEC,KAAK,SACLC,SAAU,EACVV,QAASA,EACTW,UAAW,SAAAC,GACS,UAAdA,EAAMC,KACRb,EAAQY,KAGRV,GAEHD,ICVQa,EAAW,GAAAC,OAFH,6BAEG,8BAEXC,EAAQ,CAAC,QAAS,SCIzBC,UAAMC,YAAc,CACxBC,YDXA,gGCYAC,QAAS,EACTC,QAAS,OAQLC,6MAaJC,MAAQ,CACNC,eAAgB,KAChBC,YAAaC,IAAMC,EAAKzB,MAAM0B,QAAS,+EAGhC,IAAAC,EAAAC,KACCF,EAAYE,KAAK5B,MAAjB0B,QADDG,EAEyCD,KAAKP,MAA7CC,EAFDO,EAECP,eAAgBC,EAFjBM,EAEiBN,YAClBO,GAHCD,EAE8BE,OAChBR,EAAYD,IACjC,OACEnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KACE7B,EAAAC,EAAAC,cAACU,EAAD,CACEkB,MAAOrB,EACPsB,eAAgB,CACdC,SAAU,WACVC,IAAK,EACLC,OAAQ,EACRC,MAAO,QAETP,OAAQjB,EACRyB,KAAM,CAAC,IAENb,EAAQc,IAAI,SAAA3C,GAAA,IAAG4C,EAAH5C,EAAG4C,GAAIC,EAAP7C,EAAO6C,YAAaC,EAApB9C,EAAoB8C,MAApB,OACXxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQjC,IAAK8B,EAAIC,YAAaA,GAC5BvC,EAAAC,EAAAC,cAACwC,EAAD,CAAWC,UAAU,SAAShD,QAAS,kBAAM6B,EAAKoB,SAAS,CAAEzB,eAAgBmB,MAC1EE,MAINb,GACC3B,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAOjC,IAAKmB,EAAaW,GAAIC,YAAaZ,EAAaY,YAAaM,OAAQ,IAC1E7C,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,SACb3C,EAAAC,EAAAC,cAAA,WAAMyB,EAAamB,UAK3B9C,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,eAAehB,GAAgBA,EAAaoB,cAlDjDC,aAwDZC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,CAAK/B,QAASgC,EAAQ,OAAkBN","file":"static/js/main.c280ef7c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Clickable = ({ onClick, children, ...props }) => (\n  <span\n    role=\"button\"\n    tabIndex={0}\n    onClick={onClick}\n    onKeyDown={event => {\n      if (event.key === 'Enter') {\n        onClick(event);\n      }\n    }}\n    {...props}\n  >\n    {children}\n  </span>\n);\n\nClickable.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Clickable;\n","export const ACCESS_TOKEN =\n  'pk.eyJ1IjoidWxhZGJvaGRhbiIsImEiOiJjam9kMDQ1NzYxOTYyM3FvanhpOXE1cDIzIn0.JiXb8lR9e53GqZz51PZdaQ';\n\nconst STYLE_PREFIX = 'mapbox://styles/uladbohdan';\n\nexport const LIGHT_STYLE = `${STYLE_PREFIX}/cjpjxmip00js22snnkwi85d4i`;\n\nexport const MINSK = [27.5615, 53.9045];\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ReactMapboxGl, { Marker, Popup } from 'react-mapbox-gl';\nimport keyBy from 'lodash/keyBy';\n\nimport Clickable from './Clickable';\n\nimport { ACCESS_TOKEN, LIGHT_STYLE, MINSK } from './constants';\nimport './styles.css';\n\nconst Map = ReactMapboxGl({\n  accessToken: ACCESS_TOKEN,\n  minZoom: 4,\n  maxZoom: 7.5,\n});\n\n// NOTE: When rendering many objects,\n// avoid using `Markers` as it will negatively affect performance.\n// Use `Layers` and `Features` instead.\n// https://github.com/alex3165/react-mapbox-gl/blob/master/docs/API.md#marker\n\nclass App extends Component {\n  static propTypes = {\n    legends: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        coordinates: PropTypes.arrayOf(PropTypes.number).isRequired,\n        text: PropTypes.string.isRequired,\n        emoji: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  };\n\n  state = {\n    activeLegendId: null,\n    legendsById: keyBy(this.props.legends, 'id'),\n  };\n\n  render() {\n    const { legends } = this.props;\n    const { activeLegendId, legendsById, center } = this.state;\n    const activeLegend = legendsById[activeLegendId];\n    return (\n      <>\n        <Map\n          style={LIGHT_STYLE}\n          containerStyle={{\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            width: '100%',\n          }}\n          center={MINSK}\n          zoom={[6]}\n        >\n          {legends.map(({ id, coordinates, emoji }) => (\n            <Marker key={id} coordinates={coordinates}>\n              <Clickable className=\"marker\" onClick={() => this.setState({ activeLegendId: id })}>\n                {emoji}\n              </Clickable>\n            </Marker>\n          ))}\n          {activeLegend && (\n            <Popup key={activeLegend.id} coordinates={activeLegend.coordinates} offset={50}>\n              <div className=\"popup\">\n                <div>{activeLegend.title}</div>\n              </div>\n            </Popup>\n          )}\n        </Map>\n        <div className=\"legend-text\">{activeLegend && activeLegend.text}</div>\n      </>\n    );\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App legends={require('./legends')} />, rootElement);\n"],"sourceRoot":""}