{"version":3,"sources":["utils.js","constants.js","components/GA.js","components/common/Clickable.js","components/Title.js","components/common/StopClickPropagation.js","components/Wir.js","components/common/OnEscape.js","components/common/TextWithParagraphs.js","components/CrossSvgIcon.js","components/LegendModal.js","components/Map.js","index.js"],"names":["getGoogleMapsUrl","_ref","_ref2","Object","slicedToArray","lng","lat","zoom","arguments","length","undefined","concat","track","options","ReactGA","event","objectSpread","category","isDesktopDevice","window","innerHeight","innerWidth","clearUtmParams","_window","location","history","search","indexOf","replaceState","toString","replace","GA_ID","LIGHT_STYLE","MINSK","BELARUS_BOUNDS","zIndexElements","PropTypes","shape","id","number","isRequired","title","string","coordinates","arrayOf","text","emoji","_len","constants","Array","_key","reduce","acc","constant","createConstants","zIndexes","MAP","MARKER","CONTROLS","LABELS","LEGENDS_MODAL","cur","index","GA","initialize","debug","process","ga","pathname","hitCallback","this","props","children","Component","Clickable","onClick","objectWithoutProperties","react_default","a","createElement","assign","role","tabIndex","onKeyDown","key","Title","className","style","zIndex","StopClickPropagation","handleStopPropagation","stopPropagation","_this$props","tag","React","defaultProps","Wir","src","alt","common_StopClickPropagation","href","target","rel","OnEscape","handleKeyDown","action","_this","addEventListener","removeEventListener","TextWithParagraphs","paragraphs","split","lastParagraphIndex","map","paragraph","i","react","Fragment","CrossSvgIcon","viewBox","width","height","fill","d","LegendEmoji","_ref$legend","legend","emojiCode","LegendModal","_ref2$legend","onClose","common_Clickable","components_Title","LegendModal_LegendEmoji","components_Wir","label","formatcoords","format","latLonSeparator","decimalPlaces","common_TextWithParagraphs","type","autoFocus","components_CrossSvgIcon","OnEscape_OnEscape","Mapbox","ReactMapboxGl","accessToken","logoPosition","minZoom","maxZoom","getFitBoundsOptions","padding","left","rightShift","top","topShift","bottom","right","Map","state","activeLegend","handleZoom","nextZoom","Math","round","getZoom","setState","calculateShifts","resizeMap","resize","fitBounds","setActiveLegend","_this2","legends","_this$state","containerStyle","position","fitBoundsOptions","center","onZoom","onSourceDataLoading","lib_esm","filter","_ref3","currentTarget","blur","components_LegendModal","rootElement","document","getElementById","ReactDOM","render","components_GA","components_Map"],"mappings":"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","file":"static/js/main.7a9a54f0.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\n\nexport const getGoogleMapsUrl = ([lng, lat], zoom = 7) =>\n  `http://www.google.com/maps/place/${lat},${lng}/@${lat},${lng},${zoom}z`;\n\nexport const track = options => {\n  if (!process.env.REACT_APP_WIR_ENV) {\n    return;\n  }\n  ReactGA.event({\n    category: 'Legends Map',\n    ...options,\n  });\n};\n\nexport const createConstants = (...constants) =>\n  constants.reduce((acc, constant) => {\n    acc[constant] = constant;\n    return acc;\n  }, {});\n\nexport const isDesktopDevice = () => window.innerHeight < window.innerWidth;\n\nexport const clearUtmParams = () => {\n  const { location, history } = window;\n  const isUtmsInQuery = location.search.indexOf('utm_') !== -1;\n  if (isUtmsInQuery && history.replaceState) {\n    history.replaceState({}, '', location.toString().replace(/(&|\\?)utm([_a-z0-9=]+)/g, ''));\n  }\n};\n","import PropTypes from 'prop-types';\n\nimport { createConstants } from './utils';\n\nexport const MAPBOX_ACCESS_TOKEN =\n  'pk.eyJ1IjoidWxhZGJvaGRhbiIsImEiOiJjam9kMDQ1NzYxOTYyM3FvanhpOXE1cDIzIn0.JiXb8lR9e53GqZz51PZdaQ';\n\nexport const GA_ID = {\n  staging: 'UA-117143376-4',\n  production: 'UA-117143376-3',\n};\n\nconst STYLE_PREFIX = 'mapbox://styles/uladbohdan';\n\nexport const LIGHT_STYLE = `${STYLE_PREFIX}/cjpjxmip00js22snnkwi85d4i`;\n\nexport const MINSK = [27.5615, 53.9045];\n\nexport const BELARUS_BOUNDS = [\n  23.178357, // west\n  51.261881, // south\n  32.776784, // east\n  56.139922, // north\n];\n\nexport const EMOJI_SCALE_RATE = 4.5;\n\nexport const LegendShape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  coordinates: PropTypes.arrayOf(PropTypes.number).isRequired,\n  text: PropTypes.string.isRequired,\n  emoji: PropTypes.string.isRequired,\n});\n\nexport const zIndexElements = createConstants(\n  'MAP',\n  'MARKER',\n  'CONTROLS',\n  'LABELS',\n  'LEGENDS_MODAL'\n);\n\nexport const zIndexes = [\n  zIndexElements.MAP,\n  zIndexElements.MARKER,\n  zIndexElements.CONTROLS,\n  zIndexElements.LABELS,\n  zIndexElements.LEGENDS_MODAL,\n].reduce((acc, cur, index) => {\n  acc[cur] = index;\n  return acc;\n}, {});\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactGA from 'react-ga';\n\nimport { GA_ID } from '../constants';\nimport { clearUtmParams } from '../utils';\n\nclass GA extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n  };\n\n  componentDidMount() {\n    if (process.env.REACT_APP_WIR_ENV) {\n      ReactGA.initialize(GA_ID[process.env.REACT_APP_WIR_ENV], {\n        debug: process.env.REACT_APP_WIR_ENV !== 'production',\n      });\n      ReactGA.ga('send', 'pageview', window.location.pathname, {\n        hitCallback: clearUtmParams,\n      });\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    return children;\n  }\n}\n\nexport default GA;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Clickable = ({ onClick, children, ...props }) => (\n  <div\n    role=\"button\"\n    tabIndex={0}\n    onClick={onClick}\n    onKeyDown={event => {\n      if (event.key === 'Enter') {\n        onClick(event);\n      }\n    }}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nClickable.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Clickable;\n","import React from 'react';\n\nimport { zIndexes, zIndexElements } from '../constants';\n\nconst Title = () => (\n  <div className=\"title\" style={{ zIndex: zIndexes[zIndexElements.LABELS] }}>\n    Мапа\n    <br />\n    беларускіх\n    <br />\n    легенд\n  </div>\n);\n\nexport default Title;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass StopClickPropagation extends Component {\n  static propTypes = {\n    tag: PropTypes.string,\n    className: PropTypes.string,\n    children: PropTypes.node.isRequired,\n  };\n\n  static defaultProps = {\n    tag: 'div',\n    className: '',\n  };\n\n  handleStopPropagation = event => {\n    event.stopPropagation();\n  };\n\n  render() {\n    const { tag, className, children } = this.props;\n\n    return React.createElement(\n      tag,\n      {\n        className,\n        onClick: this.handleStopPropagation,\n      },\n      children\n    );\n  }\n}\n\nexport default StopClickPropagation;\n","import React from 'react';\n\nimport StopClickPropagation from './common/StopClickPropagation';\nimport { zIndexes, zIndexElements } from '../constants';\n\nconst Wir = () => (\n  <div className=\"wir\" style={{ zIndex: zIndexes[zIndexElements.LABELS] }}>\n    <img className=\"wir__logo\" src=\"./favicon.png\" alt=\"Wir.by\" />\n    <StopClickPropagation>\n      зроблена камандай\n      <a\n        className=\"wir__link\"\n        href=\"http://wir.by?utm_source=map\"\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        wir.by\n      </a>\n    </StopClickPropagation>\n  </div>\n);\n\nexport default Wir;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class OnEscape extends Component {\n  static propTypes = {\n    action: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = ({ key }) => {\n    const { action } = this.props;\n    if (key === 'Escape') {\n      action();\n    }\n  };\n\n  render() {\n    return null;\n  }\n}\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextWithParagraphs = ({ text }) => {\n  const paragraphs = text.split('\\n');\n  const lastParagraphIndex = paragraphs.length - 1;\n\n  return paragraphs.map((paragraph, i) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <Fragment key={i}>\n      {paragraph}\n      {i < lastParagraphIndex && (\n        <>\n          <br />\n          <br />\n        </>\n      )}\n    </Fragment>\n  ));\n};\n\nTextWithParagraphs.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default TextWithParagraphs;\n","import React from 'react';\n\nconst CrossSvgIcon = props => (\n  <svg viewBox=\"0 0 31.112 31.112\" width=\"1em\" height=\"1em\" {...props}>\n    <path\n      fill=\"#1a9582\"\n      d=\"M31.112 1.414L29.698 0 15.556 14.142 1.414 0 0 1.414l14.142 14.142L0 29.698l1.414 1.414L15.556 16.97l14.142 14.142 1.414-1.414L16.97\n 15.556z\"\n    />\n  </svg>\n);\n\nexport default CrossSvgIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport formatcoords from 'formatcoords';\n\nimport OnEscape from './common/OnEscape';\nimport Clickable from './common/Clickable';\nimport TextWithParagraphs from './common/TextWithParagraphs';\nimport Title from './Title';\nimport Wir from './Wir';\nimport CrossSvgIcon from './CrossSvgIcon';\n\nimport { LegendShape, zIndexes, zIndexElements } from '../constants';\nimport { getGoogleMapsUrl, track } from '../utils';\n\nconst LegendEmoji = ({ legend: { emojiCode, emoji } }) => (\n  <img className=\"legend__emoji\" src={`./images/${emojiCode}-144.png`} alt={emoji} />\n);\n\nconst LegendModal = ({ legend: { emoji, coordinates, title, text }, legend, onClose }) => (\n  <div className=\"legend__modal\" style={{ zIndex: zIndexes[zIndexElements.LEGENDS_MODAL] }}>\n    <div className=\"legend__content\">\n      <Clickable className=\"legend__left\" onClick={onClose}>\n        <Title />\n        <LegendEmoji legend={legend} />\n        <Wir />\n      </Clickable>\n      <div className=\"legend__right\">\n        <div className=\"legend__top\">\n          <div className=\"legend__emoji-wrapper\">\n            <LegendEmoji legend={legend} />\n          </div>\n          <a\n            href={getGoogleMapsUrl(coordinates)}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            onClick={() => track({ action: 'google-map-opened', label: `${emoji} ${title}` })}\n          >\n            {formatcoords(coordinates, true).format('DD MM X', {\n              latLonSeparator: ', ',\n              decimalPlaces: 2,\n            })}\n          </a>\n          <div className=\"legend__title\">{title}</div>\n        </div>\n        <div className=\"legend__text\">\n          <TextWithParagraphs text={text} />\n        </div>\n      </div>\n      <button\n        type=\"button\"\n        className=\"legend__close-button\"\n        onClick={onClose}\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus=\"autofocus\"\n      >\n        <CrossSvgIcon className=\"legend__close-icon\" />\n      </button>\n      <OnEscape action={onClose} />\n    </div>\n  </div>\n);\n\nLegendModal.propTypes = {\n  legend: LegendShape.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default LegendModal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMapboxGl, { Marker, ZoomControl } from 'react-mapbox-gl';\n\nimport Clickable from './common/Clickable';\nimport Title from './Title';\nimport Wir from './Wir';\nimport LegendModal from './LegendModal';\n\nimport { track, isDesktopDevice } from '../utils';\n\nimport {\n  MAPBOX_ACCESS_TOKEN,\n  LIGHT_STYLE,\n  MINSK,\n  BELARUS_BOUNDS,\n  EMOJI_SCALE_RATE,\n  LegendShape,\n  zIndexes,\n  zIndexElements,\n} from '../constants';\n\nconst Mapbox = ReactMapboxGl({\n  accessToken: MAPBOX_ACCESS_TOKEN,\n  logoPosition: 'bottom-right',\n  minZoom: 4,\n  maxZoom: 6.5,\n});\n\n// NOTE: When rendering many objects,\n// avoid using `Markers` as it will negatively affect performance.\n// Use `Layers` and `Features` instead.\n// https://github.com/alex3165/react-mapbox-gl/blob/master/docs/API.md#marker\n\nconst getFitBoundsOptions = ({ rightShift, topShift }) => ({\n  padding: {\n    left: rightShift ? 250 : 25,\n    top: topShift ? 100 : 25,\n    bottom: 25,\n    right: 25,\n  },\n});\n\nclass Map extends Component {\n  static propTypes = {\n    legends: PropTypes.arrayOf(LegendShape).isRequired,\n  };\n\n  state = {\n    activeLegend: null,\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.resizeMap);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeMap);\n  }\n\n  handleZoom = map => {\n    const { zoom } = this.state;\n    const nextZoom = Math.round(map.getZoom());\n    if (nextZoom !== zoom) {\n      this.setState({ zoom: nextZoom });\n    }\n  };\n\n  calculateShifts = () => {\n    const { activeLegend } = this.state;\n    return {\n      rightShift: isDesktopDevice() && !activeLegend,\n      topShift: !isDesktopDevice(),\n    };\n  };\n\n  resizeMap = () => {\n    this.map.resize();\n    this.map.fitBounds(BELARUS_BOUNDS, getFitBoundsOptions(this.calculateShifts()));\n  };\n\n  setActiveLegend = activeLegend => this.setState({ activeLegend }, this.resizeMap);\n\n  render() {\n    const { legends } = this.props;\n    const { activeLegend, zoom } = this.state;\n    return (\n      <>\n        <Title />\n        <main>\n          <Mapbox\n            style={LIGHT_STYLE}\n            containerStyle={{\n              position: 'absolute',\n              top: activeLegend ? 150 : 0,\n              bottom: 0,\n              width: activeLegend ? '50%' : '100%',\n              zIndex: zIndexes[zIndexElements.MAP],\n            }}\n            fitBounds={BELARUS_BOUNDS}\n            fitBoundsOptions={getFitBoundsOptions(this.calculateShifts())}\n            center={MINSK}\n            onZoom={this.handleZoom}\n            // HACK: same `map` object\n            onSourceDataLoading={map => {\n              if (!this.map) {\n                this.map = map;\n              }\n            }}\n          >\n            {!activeLegend && <ZoomControl style={{ zIndex: zIndexes[zIndexElements.CONTROLS] }} />}\n            {legends\n              .filter(({ id }) => !activeLegend || id === activeLegend.id)\n              .map(legend => {\n                const { id, title, coordinates, emoji, emojiCode } = legend;\n                return (\n                  <Marker\n                    key={id}\n                    coordinates={coordinates}\n                    style={{ zIndex: zIndexes[zIndexElements.MARKER] }}\n                  >\n                    <Clickable\n                      className=\"legends__marker\"\n                      onClick={({ currentTarget }) => {\n                        // HACK: clear outline\n                        currentTarget.blur();\n                        track({ action: 'emoji-clicked', label: `${emoji} ${title}` });\n                        this.setActiveLegend(legend);\n                      }}\n                    >\n                      <img\n                        alt={emoji}\n                        src={`./images/${emojiCode}-72.png`}\n                        width={zoom * EMOJI_SCALE_RATE}\n                      />\n                    </Clickable>\n                  </Marker>\n                );\n              })}\n          </Mapbox>\n        </main>\n        <Wir />\n        {activeLegend && (\n          <LegendModal legend={activeLegend} onClose={() => this.setActiveLegend(null)} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default Map;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GA from './components/GA';\nimport Map from './components/Map';\n\nimport './styles.scss';\nimport legends from './legends.json';\n\nconst App = () => (\n  <GA>\n    <Map legends={legends} />\n  </GA>\n);\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}