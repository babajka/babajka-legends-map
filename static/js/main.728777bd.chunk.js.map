{"version":3,"sources":["common/Clickable.js","utils.js","constants.js","common/Title.js","common/Wir.js","common/TextWithParagraphs.js","LegendModal.js","index.js"],"names":["Clickable","_ref","onClick","children","props","Object","objectWithoutProperties","react_default","a","createElement","assign","role","tabIndex","onKeyDown","event","key","getGoogleMapsUrl","_ref2","slicedToArray","lng","lat","zoom","arguments","length","undefined","concat","track","options","ReactGA","objectSpread","category","isDesktopDevice","window","innerHeight","innerWidth","GA_ID","LIGHT_STYLE","MINSK","BELARUS_BOUNDS","zIndexElements","PropTypes","shape","id","number","isRequired","title","string","coordinates","arrayOf","text","emoji","_len","constants","Array","_key","reduce","acc","constant","createConstants","zIndexes","MAP","MARKER","CONTROLS","LABELS","LEGENDS_MODAL","cur","index","Title","className","style","zIndex","Wir","src","alt","href","target","rel","TextWithParagraphs","paragraphs","split","lastParagraphIndex","map","paragraph","i","react","Fragment","LegendModal","_ref$legend","legend","emojiCode","onClose","common_Title","common_Wir","action","label","formatcoords","format","latLonSeparator","decimalPlaces","common_TextWithParagraphs","Map","ReactMapboxGl","accessToken","logoPosition","minZoom","maxZoom","getFitBoundsOptions","padding","left","top","bottom","right","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleZoom","state","nextZoom","Math","round","getZoom","setState","resizeMap","activeLegendId","resize","fitBounds","setActiveLegendId","legendsById","keyBy","legends","addEventListener","initialize","debug","process","pageview","document","location","pathname","removeEventListener","_this2","_this$state","activeLegend","containerStyle","position","width","fitBoundsOptions","center","onZoom","onSourceDataLoading","lib_esm","filter","common_Clickable","_ref3","currentTarget","blur","src_LegendModal","Component","rootElement","getElementById","ReactDOM","render","src_App","require"],"mappings":"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","file":"static/js/main.728777bd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Clickable = ({ onClick, children, ...props }) => (\n  <div\n    role=\"button\"\n    tabIndex={0}\n    onClick={onClick}\n    onKeyDown={event => {\n      if (event.key === 'Enter') {\n        onClick(event);\n      }\n    }}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nClickable.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Clickable;\n","import ReactGA from 'react-ga';\n\nexport const getGoogleMapsUrl = ([lng, lat], zoom = 7) =>\n  `http://www.google.com/maps/place/${lat},${lng}/@${lat},${lng},${zoom}z`;\n\nexport const track = options => {\n  if (!process.env.REACT_APP_WIR_ENV) {\n    return;\n  }\n  ReactGA.event({\n    category: 'Legends Map',\n    ...options,\n  });\n};\n\nexport const createConstants = (...constants) =>\n  constants.reduce((acc, constant) => {\n    acc[constant] = constant;\n    return acc;\n  }, {});\n\nexport const isDesktopDevice = () => window.innerHeight < window.innerWidth;\n","import PropTypes from 'prop-types';\n\nimport { createConstants } from './utils';\n\nexport const MAPBOX_ACCESS_TOKEN =\n  'pk.eyJ1IjoidWxhZGJvaGRhbiIsImEiOiJjam9kMDQ1NzYxOTYyM3FvanhpOXE1cDIzIn0.JiXb8lR9e53GqZz51PZdaQ';\n\nexport const GA_ID = {\n  staging: 'UA-117143376-4',\n  production: 'UA-117143376-3',\n};\n\nconst STYLE_PREFIX = 'mapbox://styles/uladbohdan';\n\nexport const LIGHT_STYLE = `${STYLE_PREFIX}/cjpjxmip00js22snnkwi85d4i`;\n\nexport const MINSK = [27.5615, 53.9045];\n\nexport const BELARUS_BOUNDS = [\n  23.178357, // west\n  51.261881, // south\n  32.776784, // east\n  56.139922, // north\n];\n\nexport const EMOJI_SCALE_RATE = 4.5;\n\nexport const LegendShape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  coordinates: PropTypes.arrayOf(PropTypes.number).isRequired,\n  text: PropTypes.string.isRequired,\n  emoji: PropTypes.string.isRequired,\n});\n\nexport const zIndexElements = createConstants(\n  'MAP',\n  'MARKER',\n  'CONTROLS',\n  'LABELS',\n  'LEGENDS_MODAL'\n);\n\nexport const zIndexes = [\n  zIndexElements.MAP,\n  zIndexElements.MARKER,\n  zIndexElements.CONTROLS,\n  zIndexElements.LABELS,\n  zIndexElements.LEGENDS_MODAL,\n].reduce((acc, cur, index) => {\n  acc[cur] = index;\n  return acc;\n}, {});\n","import React from 'react';\n\nimport { zIndexes, zIndexElements } from '../constants';\n\nconst Title = () => (\n  <div className=\"title\" style={{ zIndex: zIndexes[zIndexElements.LABELS] }}>\n    Мапа\n    <br />\n    беларускіх\n    <br />\n    легенд\n  </div>\n);\n\nexport default Title;\n","import React from 'react';\n\nimport { zIndexes, zIndexElements } from '../constants';\n\nconst Wir = () => (\n  <div className=\"wir\" style={{ zIndex: zIndexes[zIndexElements.LABELS] }}>\n    <img className=\"wir__logo\" src=\"./images/logo.png\" alt=\"Wir.by\" />\n    <div>\n      зроблена камандай\n      <a\n        className=\"wir__link\"\n        href=\"http://wir.by?utm_source=map\"\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        wir.by\n      </a>\n    </div>\n  </div>\n);\n\nexport default Wir;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextWithParagraphs = ({ text }) => {\n  const paragraphs = text.split('\\n');\n  const lastParagraphIndex = paragraphs.length - 1;\n\n  return paragraphs.map((paragraph, i) => (\n    <Fragment key={i}>\n      {paragraph}\n      {i < lastParagraphIndex && (\n        <>\n          <br />\n          <br />\n        </>\n      )}\n    </Fragment>\n  ));\n};\n\nTextWithParagraphs.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default TextWithParagraphs;\n","import React from 'react';\nimport formatcoords from 'formatcoords';\n\nimport Title from './common/Title';\nimport Wir from './common/Wir';\nimport TextWithParagraphs from './common/TextWithParagraphs';\n\nimport { LegendShape, zIndexes, zIndexElements } from './constants';\nimport { getGoogleMapsUrl, track } from './utils';\n\nconst LegendModal = ({ legend: { emoji, emojiCode, coordinates, title, text }, onClose }) => (\n  <div className=\"legend__modal\" style={{ zIndex: zIndexes[zIndexElements.LEGENDS_MODAL] }}>\n    <div className=\"legend__content\">\n      <div className=\"legend__left\">\n        <Title />\n        <img className=\"legend__emoji\" src={`./images/${emojiCode}.png`} alt={title} />\n        <Wir />\n      </div>\n      <div className=\"legend__right\">\n        <div className=\"legend__top\">\n          <div className=\"legend__emoji-wrapper\">\n            <img className=\"legend__emoji\" src={`./images/${emojiCode}.png`} alt={title} />\n          </div>\n          <a\n            href={getGoogleMapsUrl(coordinates)}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            onClick={() => track({ action: 'google-map-opened', label: `${emoji} ${title}` })}\n          >\n            {formatcoords(coordinates, true).format('DD MM X', {\n              latLonSeparator: ', ',\n              decimalPlaces: 2,\n            })}\n          </a>\n          <div className=\"legend__title\">{title}</div>\n        </div>\n        <div className=\"legend__text\">\n          <TextWithParagraphs text={text} />\n        </div>\n      </div>\n      <button className=\"legend__close-button\" onClick={onClose}>\n        <i className=\"legend__close-icon fa fa-times\" />\n      </button>\n    </div>\n  </div>\n);\n\nLegendModal.propTypes = {\n  legend: LegendShape.isRequired,\n};\n\nexport default LegendModal;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ReactMapboxGl, { Marker, ZoomControl } from 'react-mapbox-gl';\nimport ReactGA from 'react-ga';\nimport keyBy from 'lodash/keyBy';\n\nimport Clickable from './common/Clickable';\nimport Title from './common/Title';\nimport Wir from './common/Wir';\nimport LegendModal from './LegendModal';\n\nimport { track, isDesktopDevice } from './utils';\n\nimport {\n  MAPBOX_ACCESS_TOKEN,\n  GA_ID,\n  LIGHT_STYLE,\n  MINSK,\n  BELARUS_BOUNDS,\n  EMOJI_SCALE_RATE,\n  LegendShape,\n  zIndexes,\n  zIndexElements,\n} from './constants';\nimport './styles.scss';\n\nconst Map = ReactMapboxGl({\n  accessToken: MAPBOX_ACCESS_TOKEN,\n  logoPosition: 'bottom-right',\n  minZoom: 4,\n  maxZoom: 6.5,\n});\n\n// NOTE: When rendering many objects,\n// avoid using `Markers` as it will negatively affect performance.\n// Use `Layers` and `Features` instead.\n// https://github.com/alex3165/react-mapbox-gl/blob/master/docs/API.md#marker\n\nconst getFitBoundsOptions = (rightShift = false) => ({\n  padding: {\n    left: rightShift ? 250 : 25,\n    top: 25,\n    bottom: 25,\n    right: 25,\n  },\n});\n\nclass App extends Component {\n  static propTypes = {\n    legends: PropTypes.arrayOf(LegendShape).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.legendsById = keyBy(this.props.legends, 'id');\n    this.state = { activeLegendId: null };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.resizeMap);\n    if (process.env.REACT_APP_WIR_ENV) {\n      ReactGA.initialize(GA_ID[process.env.REACT_APP_WIR_ENV], {\n        debug: process.env.REACT_APP_WIR_ENV !== 'production',\n      });\n      ReactGA.pageview(document.location.pathname);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeMap);\n  }\n\n  handleZoom = map => {\n    const { zoom } = this.state;\n    const nextZoom = Math.round(map.getZoom());\n    if (nextZoom !== zoom) {\n      this.setState({ zoom: nextZoom });\n    }\n  };\n\n  resizeMap = () => {\n    const { activeLegendId } = this.state;\n    this.map.resize();\n    this.map.fitBounds(BELARUS_BOUNDS, getFitBoundsOptions(isDesktopDevice() && !activeLegendId));\n  };\n\n  setActiveLegendId = activeLegendId => this.setState({ activeLegendId }, this.resizeMap);\n\n  render() {\n    const { legends } = this.props;\n    const { activeLegendId, zoom } = this.state;\n    const activeLegend = this.legendsById[activeLegendId];\n    return (\n      <>\n        <Map\n          style={LIGHT_STYLE}\n          containerStyle={{\n            position: 'absolute',\n            top: activeLegendId ? 150 : 0,\n            bottom: 0,\n            width: activeLegendId ? '50%' : '100%',\n            zIndex: zIndexes[zIndexElements.MAP],\n          }}\n          fitBounds={BELARUS_BOUNDS}\n          fitBoundsOptions={getFitBoundsOptions(isDesktopDevice() && !activeLegendId)}\n          center={MINSK}\n          onZoom={this.handleZoom}\n          // HACK: same `map` object\n          onSourceDataLoading={map => {\n            if (!this.map) {\n              this.map = map;\n            }\n          }}\n        >\n          {!activeLegendId && <ZoomControl style={{ zIndex: zIndexes[zIndexElements.CONTROLS] }} />}\n          {legends\n            .filter(({ id }) => !activeLegendId || id === activeLegendId)\n            .map(({ id, title, coordinates, emoji, emojiCode }) => (\n              <Marker\n                key={id}\n                coordinates={coordinates}\n                style={{ zIndex: zIndexes[zIndexElements.MARKER] }}\n              >\n                <Clickable\n                  onClick={({ currentTarget }) => {\n                    // HACK: clear outline\n                    currentTarget.blur();\n                    track({ action: 'emoji-clicked', label: `${emoji} ${title}` });\n                    this.setActiveLegendId(id);\n                  }}\n                >\n                  <img\n                    alt={emoji}\n                    src={`./images/${emojiCode}.png`}\n                    width={zoom * EMOJI_SCALE_RATE}\n                  />\n                </Clickable>\n              </Marker>\n            ))}\n        </Map>\n        <Title />\n        <Wir />\n        {activeLegend && (\n          <LegendModal legend={activeLegend} onClose={() => this.setActiveLegendId(null)} />\n        )}\n      </>\n    );\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App legends={require('./legends')} />, rootElement);\n"],"sourceRoot":""}