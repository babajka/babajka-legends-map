{"version":3,"sources":["Clickable.js","constants.js","LegendModal.js","index.js"],"names":["Clickable","_ref","onClick","children","props","Object","objectWithoutProperties","react_default","a","createElement","assign","role","tabIndex","onKeyDown","event","key","LIGHT_STYLE","concat","MINSK","BELARUS_BOUNDS","LegendModal","PropTypes","shape","id","number","isRequired","title","string","coordinates","arrayOf","text","emoji","_ref$legend","legend","emojiCode","onClose","className","alt","src","join","Map","ReactMapboxGl","accessToken","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setActiveLegendId","activeLegendId","setState","legendsById","keyBy","legends","state","_this2","activeLegend","Fragment","style","containerStyle","position","top","bottom","width","fitBounds","fitBoundsOptions","padding","center","map","lib_esm","src_Clickable","src_LegendModal","Component","rootElement","document","getElementById","ReactDOM","render","src_App","require"],"mappings":"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","file":"static/js/main.7c66a475.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Clickable = ({ onClick, children, ...props }) => (\n  <div\n    role=\"button\"\n    tabIndex={0}\n    onClick={onClick}\n    onKeyDown={event => {\n      if (event.key === 'Enter') {\n        onClick(event);\n      }\n    }}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nClickable.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Clickable;\n","import PropTypes from 'prop-types';\n\nexport const ACCESS_TOKEN =\n  'pk.eyJ1IjoidWxhZGJvaGRhbiIsImEiOiJjam9kMDQ1NzYxOTYyM3FvanhpOXE1cDIzIn0.JiXb8lR9e53GqZz51PZdaQ';\n\nconst STYLE_PREFIX = 'mapbox://styles/uladbohdan';\n\nexport const LIGHT_STYLE = `${STYLE_PREFIX}/cjpjxmip00js22snnkwi85d4i`;\n\nexport const MINSK = [27.5615, 53.9045];\n\nexport const BELARUS_BOUNDS = [\n  23.178357, // west\n  51.261881, // south\n  32.776784, // east\n  56.139922, // north\n];\n\nexport const LegendShape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  coordinates: PropTypes.arrayOf(PropTypes.number).isRequired,\n  text: PropTypes.string.isRequired,\n  emoji: PropTypes.string.isRequired,\n});\n","import React from 'react';\n\nimport { LegendShape } from './constants';\n\nconst LegendModal = ({ legend: { emoji, coordinates, title, text, emojiCode }, onClose }) => (\n  <div className=\"legend__modal\">\n    <div className=\"legend__content\">\n      <div className=\"legend__top\">\n        <img className=\"legend__emoji\" alt={emoji} src={`./images/${emojiCode}.png`} />\n        <div className=\"legend__coords\">{coordinates.join(', ')}</div>\n        <div className=\"legend__title\">{title}</div>\n      </div>\n      <div className=\"legend__text\">{text}</div>\n      <button className=\"legend__close-button\" onClick={onClose}>\n        <i className=\"legend__close-icon fa fa-times\" />\n      </button>\n    </div>\n  </div>\n);\n\nLegendModal.propTypes = {\n  legend: LegendShape.isRequired,\n};\n\nexport default LegendModal;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\nimport keyBy from 'lodash/keyBy';\n\nimport Clickable from './Clickable';\nimport LegendModal from './LegendModal';\n\nimport { ACCESS_TOKEN, LIGHT_STYLE, MINSK, BELARUS_BOUNDS, LegendShape } from './constants';\nimport './styles.scss';\n\nconst Map = ReactMapboxGl({\n  accessToken: ACCESS_TOKEN,\n});\n\n// NOTE: When rendering many objects,\n// avoid using `Markers` as it will negatively affect performance.\n// Use `Layers` and `Features` instead.\n// https://github.com/alex3165/react-mapbox-gl/blob/master/docs/API.md#marker\n\nclass App extends Component {\n  static propTypes = {\n    legends: PropTypes.arrayOf(LegendShape).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.legendsById = keyBy(this.props.legends, 'id');\n    this.state = { activeLegendId: null };\n  }\n\n  setActiveLegendId = activeLegendId => this.setState({ activeLegendId });\n\n  render() {\n    const { legends } = this.props;\n    const { activeLegendId } = this.state;\n    const activeLegend = this.legendsById[activeLegendId];\n\n    return (\n      <>\n        <Map\n          style={LIGHT_STYLE}\n          containerStyle={{\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            width: '100%',\n          }}\n          // TODO: fix calling `fitBounds` on window resizing\n          fitBounds={BELARUS_BOUNDS}\n          fitBoundsOptions={{\n            padding: 25,\n          }}\n          center={MINSK}\n        >\n          {legends.map(({ id, coordinates, emoji, emojiCode }) => (\n            <Marker key={id} coordinates={coordinates}>\n              <Clickable className=\"marker\" onClick={() => this.setActiveLegendId(id)}>\n                <img alt={emoji} src={`./images/${emojiCode}.png`} />\n              </Clickable>\n            </Marker>\n          ))}\n        </Map>\n        {activeLegend && (\n          <LegendModal legend={activeLegend} onClose={() => this.setActiveLegendId(null)} />\n        )}\n      </>\n    );\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App legends={require('./legends')} />, rootElement);\n"],"sourceRoot":""}